<?php

//**********************************************************************************************
//                                       YiiDatasetModel.php 
//
// Author(s): Morgane VIDAL
// PHIS-SILEX version 1.0
// Copyright Â© - INRA - 2017
// Creation date: October 2017
// Contact: morgane.vidal@inra.fr, anne.tireau@inra.fr, pascal.neveu@inra.fr
// Last modification date:  October, 2 2017
// Subject: The Yii model for the dataset. Used with web services
//***********************************************************************************************

namespace app\models\yiiModels;

use Yii;
use app\models\wsModels\WSActiveRecord;
use app\models\wsModels\WSDatasetModel;

/**
 * Model for the dataset. Used with web services
 * @author Morgane Vidal <morgane.vidal@inra.fr>
 */
class YiiDatasetModel extends WSActiveRecord {
       
    //SILEX:TODO
    //create a Provenance class with attributes uriProvenance, creationDate,
    //wasGeneratedBy, description, documentsURIs.
    //create a WasGeneratedBy class with the attributes wasGeneratedBy and 
    //wasGeneratedByDescription
    //create a Data class with the attributes uriAgronomicalObject, date and
    //value
    //\SILEX:TODO
    
    /**
     * provenance uri, generated by client
     * @var string 
     */
    public $uriProvenance;
    const URI = "uri";
    /**
     * dataset data variable
     * @var string
     */
    public $variables;
    const VARIABLE_URI = "variableUri";
    /**
     * creation date of the dataset 
     * @var string
     */
    public $creationDate;
    const CREATION_DATE = "creationDate";
    /**
     * data generating script
     * @var string
     */
    public $wasGeneratedBy;
    const WAS_GENERATED_BY = "wasGeneratedBy";
    /**
     * description of the data generation (e.g. PhenoScript version)
     * @var string 
     */
    public $wasGeneratedByDescription;
    const WAS_GENERATED_BY_DESCRIPTION = "wasGeneratedByDescription";
    /**
     * uri of the linked documents
     * @var array<string>
     */
    public $documentsURIs;
    const DOCUMENTS_URIS = "documentsUris";
    /**
     * contains data. data["uriAO"], data["date"], data["value"] 
     * @var array 
     */
    public $data;
    /**
     * data generating script
     * @var file
     */
    public $file;
    
    const PROVENANCE = "provenance";
    const DATA = "data";
    
    /**
     * 
     * @param string $pageSize number of elements per page
     * @param string $page current page 
     */
    public function __construct($pageSize = null, $page = null) {
        $this->wsModel = new WSDatasetModel();
        $this->pageSize = ($pageSize !== null || $pageSize === "") ? $pageSize : null;
        $this->page = ($page !== null || $page != "") ? $page : null;
    }
    
    /**
     * 
     * @return array the rules of the attributes
     */
    public function rules() {
        return [
          [['variables', 'creationDate', 'file'], 'required'],
          [['uriProvenance', 'creationDate', 'wasGeneratedByDescription'], 'string'],
          [['wasGeneratedBy', 'documentsURIs', 'data', 'file'], 'safe'],
          [['file'], 'file', 'extensions' => 'csv']
        ];
    }
    
    /**
     * 
     * @return array the labels of the attributes
     */
    public function attributeLabels() { 
        return [
          'uriProvenance' => Yii::t('app', 'URI'),
          'variables' => Yii::t('app', 'Quantitative Variable'),
          'creationDate' => Yii::t('app', 'Dataset Creation Date'),
          'wasGeneratedBy' => Yii::t('app', 'Was Generated By'),
          'wasGeneratedByDescription' => Yii::t('app', 'Description'),
          'file' => Yii::t('app', 'Data') . " " . Yii::t('app', 'File'),
          'documentsUris' => Yii::t('app', 'Documents')
        ];
    }
    
    /**
     * allows to fill the attributes with the informations in the array given 
     * @warning unimplement yet
     * @param array $array array key => value which contains the metadata of a dataset
     */
    protected function arrayToAttributes($array) {
         /*received $array
            {
                agronomicalObject: "http://.....",
                experiment: "http://....",
                data: [
                    {
                        date: "....",
                        value: "...",
                        variable: "http://...."
                    }
                ]
        }*/   
        throw new Exception('Not implemented');
    }

     /**
     * Create an array representing the dataset
     * Used for the web service for example
     * @return array with the attributes. 
     */
    public function attributesToArray() {
        $elementForWebService[YiiDatasetModel::VARIABLE_URI] = $this->variables;
        
        //Provenance
        $wasGeneratedBy[YiiDatasetModel::WAS_GENERATED_BY_DESCRIPTION] = $this->wasGeneratedByDescription;
        if ($this->wasGeneratedBy !== null && $this->wasGeneratedBy !== "") {
            $wasGeneratedBy[YiiDatasetModel::WAS_GENERATED_BY] = $this->wasGeneratedBy;
        }
        
        $provenance[YiiDatasetModel::URI] = $this->uriProvenance;
        $creationDate = new \DateTime($this->creationDate);
        $provenance[YiiDatasetModel::CREATION_DATE] = $creationDate->format(\DateTime::ATOM);
        $provenance[YiiDatasetModel::WAS_GENERATED_BY] = $wasGeneratedBy;  
        
        if ($this->documentsURIs !== null && $this->documentsURIs !== "") {
            foreach ($this->documentsURIs as $documentsURIs) {
                foreach ($documentsURIs as $documentURI) {
                    $provenance[YiiDatasetModel::DOCUMENTS_URIS][] = $documentURI;
                }
            }
        }
        $elementForWebService[YiiDatasetModel::PROVENANCE] = $provenance;
        
        $elementForWebService[YiiDatasetModel::DATA] = $this->data;
        var_dump(json_encode($elementForWebService));exit;
        return $elementForWebService;
    }
}